{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport AppConstants from \"../../core/constants\";\nimport { cartActions } from \"./cart-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      staus: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(`${AppConstants.referenceUrl}/cart.json`, {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successfully.\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Failed to send cart data\"\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(`${AppConstants.referenceUrl}/cart.json`);\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Failed to fetch cart data\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","AppConstants","cartActions","sendCartData","cart","dispatch","showNotification","staus","title","message","sendRequest","response","fetch","referenceUrl","method","body","JSON","stringify","ok","Error","status","error","fetchCartData","fetchData","data","json","cartData","replaceCart"],"sources":["/Volumes/office/react/advance-redux-udemy/src/components/store/cart-action.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport AppConstants from \"../../core/constants\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        staus: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(`${AppConstants.referenceUrl}/cart.json`, {\n        method: \"PUT\",\n        body: JSON.stringify(cart),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success\",\n          message: \"Sent cart data successfully.\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Failed to send cart data\",\n        })\n      );\n    }\n  };\n};\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(`${AppConstants.referenceUrl}/cart.json`);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Failed to fetch cart data\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CACNL,SAAS,CAACM,gBAAgB,CAAC;MACzBC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,YAAY,CAACY,YAAa,YAAW,EAAE;QACrEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMT,WAAW,CAAC,CAAC;MACnBL,QAAQ,CACNL,SAAS,CAACM,gBAAgB,CAAC;QACzBc,MAAM,EAAE,SAAS;QACjBZ,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdhB,QAAQ,CACNL,SAAS,CAACM,gBAAgB,CAAC;QACzBc,MAAM,EAAE,OAAO;QACfZ,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMa,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOjB,QAAQ,IAAK;IACzB,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,YAAY,CAACY,YAAa,YAAW,CAAC;MAEtE,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMK,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAAC;MAClClB,QAAQ,CAACH,WAAW,CAACyB,WAAW,CAACD,QAAQ,CAAC,CAAC;IAE7C,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdhB,QAAQ,CACNL,SAAS,CAACM,gBAAgB,CAAC;QACzBc,MAAM,EAAE,OAAO;QACfZ,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}