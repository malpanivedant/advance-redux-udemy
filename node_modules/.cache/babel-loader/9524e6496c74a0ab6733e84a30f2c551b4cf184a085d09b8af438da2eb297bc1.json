{"ast":null,"code":"var _jsxFileName = \"/Volumes/office/react/advance-redux-udemy/src/App.js\",\n  _s = $RefreshSig$();\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport AppConstants from \"./core/constants\";\nimport { uiActions } from \"./components/store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./components/store/cart-action\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    // const sendCartData = async () => {\n    // dispatch(\n    //   uiActions.showNotification({\n    //     staus: \"pending\",\n    //     title: \"Sending...\",\n    //     message: \"Sending cart data!\",\n    //   })\n    // );\n    // const response = await fetch(`${AppConstants.referenceUrl}/cart.json`, {\n    //   method: \"PUT\",\n    //   body: JSON.stringify(cart),\n    // });\n\n    // if (!response.ok) {\n    //   throw new Error(\"Sending cart data failed!\");\n    // }\n\n    // const responseData = await response.json();\n\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"success\",\n    //     title: \"Success\",\n    //     message: \"Sent cart data successfully.\",\n    //   })\n    // );\n    // };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    console.log(cart);\n    dispatch(sendCartData(cart));\n    // sendCartData().catch((error) => {\n    // dispatch(\n    //   uiActions.showNotification({\n    //     status: \"error\",\n    //     title: \"Error!\",\n    //     message: \"Failed to send cart data\",\n    //   })\n    // );\n    // });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+0lLiRKB8WOzaKnbCMqO0rhbWxM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","useSelector","useDispatch","useEffect","AppConstants","uiActions","Notification","sendCartData","fetchCartData","jsxDEV","_jsxDEV","Fragment","_Fragment","isInitial","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","console","log","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/office/react/advance-redux-udemy/src/App.js"],"sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport AppConstants from \"./core/constants\";\nimport { uiActions } from \"./components/store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendCartData, fetchCartData } from \"./components/store/cart-action\"\n;\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification)\n\n  useEffect(()=>{\n    dispatch(fetchCartData());\n  },[dispatch]);\n\n\n  useEffect(() => {\n    // const sendCartData = async () => {\n      // dispatch(\n      //   uiActions.showNotification({\n      //     staus: \"pending\",\n      //     title: \"Sending...\",\n      //     message: \"Sending cart data!\",\n      //   })\n      // );\n      // const response = await fetch(`${AppConstants.referenceUrl}/cart.json`, {\n      //   method: \"PUT\",\n      //   body: JSON.stringify(cart),\n      // });\n\n      // if (!response.ok) {\n      //   throw new Error(\"Sending cart data failed!\");\n      // }\n\n      // const responseData = await response.json();\n\n      // dispatch(\n      //   uiActions.showNotification({\n      //     status: \"success\",\n      //     title: \"Success\",\n      //     message: \"Sent cart data successfully.\",\n      //   })\n      // );\n    // };\n\n    if(isInitial){\n      isInitial = false;\n      return;\n    }\n    console.log(cart);\n    dispatch(sendCartData(cart));\n    // sendCartData().catch((error) => {\n      // dispatch(\n      //   uiActions.showNotification({\n      //     status: \"error\",\n      //     title: \"Error!\",\n      //     message: \"Failed to send cart data\",\n      //   })\n      // );\n    // });\n  }, [cart, dispatch]);\n\n  return (\n    <>\n    {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/>}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,YAAY,EAAEC,aAAa,QAAQ,gCAAgC;AAC3E,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACD,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGhB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGpB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/C,MAAMC,YAAY,GAAGrB,WAAW,CAAEiB,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;EAElEnB,SAAS,CAAC,MAAI;IACZa,QAAQ,CAACR,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAC,CAACQ,QAAQ,CAAC,CAAC;EAGbb,SAAS,CAAC,MAAM;IACd;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACF;;IAEA,IAAGU,SAAS,EAAC;MACXA,SAAS,GAAG,KAAK;MACjB;IACF;IACAU,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBL,QAAQ,CAACT,YAAY,CAACc,IAAI,CAAC,CAAC;IAC5B;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACF;EACF,CAAC,EAAE,CAACA,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAEpB,oBACEN,OAAA,CAAAE,SAAA;IAAAa,QAAA,GACCH,YAAY,iBAAIZ,OAAA,CAACJ,YAAY;MAACoB,MAAM,EAAEJ,YAAY,CAACI,MAAO;MAACC,KAAK,EAAEL,YAAY,CAACK,KAAM;MAACC,OAAO,EAAEN,YAAY,CAACM;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrHtB,OAAA,CAACX,MAAM;MAAA0B,QAAA,GACJR,QAAQ,iBAAIP,OAAA,CAACZ,IAAI;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBtB,OAAA,CAACV,QAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eAET,CAAC;AAEP;AAACjB,EAAA,CAnEQD,GAAG;EAAA,QACOZ,WAAW,EACXD,WAAW,EACfA,WAAW,EACHA,WAAW;AAAA;AAAAgC,EAAA,GAJzBnB,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}